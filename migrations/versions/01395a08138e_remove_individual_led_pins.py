"""remove individual led pins

Revision ID: 01395a08138e
Revises: 7f0b238457ee
Create Date: 2023-02-27 17:01:51.763780

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '01395a08138e'
down_revision = '7f0b238457ee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('plants', schema=None) as batch_op:
        batch_op.drop_constraint('unique_plant', type_='unique')
        batch_op.create_unique_constraint('unique_plant', ['temperature_sensor_pin', 'heating_element_pin'])
        batch_op.drop_column('led_green_pin')
        batch_op.drop_column('led_red_pin')
        batch_op.drop_column('led_blue_pin')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('plants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('led_blue_pin', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('led_red_pin', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('led_green_pin', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint('unique_plant', type_='unique')
        batch_op.create_unique_constraint('unique_plant', ['temperature_sensor_pin', 'heating_element_pin', 'led_red_pin', 'led_green_pin', 'led_blue_pin'])

    # ### end Alembic commands ###
